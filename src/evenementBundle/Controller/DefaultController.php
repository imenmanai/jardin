<?php

namespace evenementBundle\Controller;

use evenementBundle\Entity\Event;
use evenementBundle\Form\EventType;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;

class DefaultController extends Controller
{
    public function affichereventAction()
    {
        $courss=$this->getDoctrine()->getRepository(Event::class)->findAll();

        return $this->render('@evenement/view/listeevent.html.twig',array('cours'=>$courss));

    }
    public function ajeventAction(request $request)
    {
        $event = new Event();
        $form = $this->createForm(EventType::class, $event);
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            /** @var UploadedFile $file */
            $file = $event->getImage();
            $filename = $this->generateUniqueFileName().'.'.$file->guessExtension();
            $file->move($this->getParameter('photos_directory'), $filename);
            $event->setImage($filename);
            $em->persist($event);
            $em->flush();
            return $this->redirectToRoute('afficherevent');
        }
        return $this->render('@evenement/view//ajouterevent.html.twig', array('form' => $form->createView()));
    }
    public function supprimereventAction(Request $request,$id){

        $model=$this->getDoctrine()->getManager();
        $modeleasupp=$this->getDoctrine()->getRepository(Event::class)->find($id);
        $model->remove($modeleasupp);
        $model->flush();
        return $this->redirectToRoute("afficherevent");
    }
    public function modifiereventAction(Request $request,$id){
        $cours= new Event();
        $em=$this->getDoctrine()->getManager();
        $cours=$em->getRepository(Event::class)->find($id);
        $form=$this->createForm(EventType::class,$cours);
        $form->handleRequest($request);
        if($form->isSubmitted()) {
            $file = $cours->getImage();

            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            $em=$this->getDoctrine()->getManager();
            $em->flush();

            return $this->redirectToRoute('afficherevent');
        }

        return $this->render('@cours/view/modifierevent.html.twig', array('form' => $form->createView()));

    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    public function affichfrontAction(){

        $courss=$this->getDoctrine()->getRepository(Event::class)->findAll();

        return $this->render('@evenement/view/afficherfrontevent.html.twig',array('cours'=>$courss));
    }

}
